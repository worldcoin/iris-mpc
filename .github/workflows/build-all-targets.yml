name: Build All Targets

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Get all test, doc and src files that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62
        with:
          files_yaml: |
            src:
              - Dockerfile*
              - Cargo.lock
              - Cargo.toml
              - deny.toml
              - rust-toolchain.toml
              - iris-*/**
              - migrations/**
              - scripts/**
              - .github/workflows/build-all-targets.yml

      - name: Install Dependencies
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: sudo apt install protobuf-compiler

      - name: Cache Rust build
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: rust-build-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-build-${{ runner.os }}-

      - name: Install Rust
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: rustup toolchain install 1.85.0

      - name: Set Rust  as default
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: rustup default 1.85.0

      # Building tests in release mode checks warnings and compiler errors that depend on optimisations
      - name: Build Tests
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: cargo build --release --all-features --tests

  build-bins:
    timeout-minutes: 40
    runs-on:
      labels: ubuntu-22.04-16core
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Get all test, doc and src files that have changed
        id: changed-files-yaml
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62
        with:
          files_yaml: |
            src:
              - Dockerfile*
              - Cargo.lock
              - Cargo.toml
              - deny.toml
              - rust-toolchain.toml
              - iris-*/**
              - migrations/**
              - scripts/**
              - .github/workflows/build-all-targets.yml

      - name: Install Dependencies
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: sudo apt install protobuf-compiler

      - name: Cache Rust build
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: rust-build-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-build-${{ runner.os }}-

      - name: Install Rust
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: rustup toolchain install 1.85.0

      - name: Set Rust as default
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: rustup default 1.85.0

      - name: Build All Targets
        if: steps.changed-files-yaml.outputs.src_any_changed == 'true'
        run: cargo build --release --all-features --lib --bins --benches --examples
