env:
  - name: RUST_LOG
    value: "info"

  - name: RUST_BACKTRACE
    value: "full"

  - name: SMPC__ENVIRONMENT
    value: "stage"

  - name: SMPC__SERVICE__SERVICE_NAME
    value: "hnsw-service-0"

  - name: SMPC__PARTY_ID
    value: "0"

  - name: SMPC__MODE_OF_COMPUTE
    value: "Cpu"

  - name: SMPC__MODE_OF_DEPLOYMENT
    value: "ShadowIsolation"

  - name: SMPC__DATABASE__URL
    valueFrom:
      secretKeyRef:
        key: DATABASE_AURORA_MPCV2_URL
        name: application

  - name: SMPC__CPU_DATABASE__URL
    valueFrom:
      secretKeyRef:
        key: TEMP_DATABASE_AURORA_HNSW_URL
        name: application

  - name: SMPC__MAX_DB_SIZE
    value: "2000000"

  - name: SMPC__MAX_BATCH_SIZE
    value: "32"

  - name: SMPC__PROCESSING_TIMEOUT_SECS
    value: "1240"

  - name: SMPC__HAWK_REQUEST_PARALLELISM
    value: "1024"

  - name: SMPC__HAWK_CONNECTION_PARALLELISM
    value: "8"

  - name: SMPC__HAWK_STREAM_PARALLELISM
    value: "32"

  - name: SMPC__OVERRIDE_MAX_BATCH_SIZE
    value: "false"

  - name: SMPC__CPU_DISABLE_PERSISTENCE
    value: "false"

  - name: SMPC__MATCH_DISTANCES_BUFFER_SIZE
    value: "10000"

  - name: SMPC__N_BUCKETS
    value: "10"

  - name: SMPC__ENABLE_SENDING_ANONYMIZED_STATS_MESSAGE
    value: "false"

  - name: SMPC__AWS__REGION
    value: "eu-north-1"

  - name: SMPC__SERVICE_PORTS
    value: '["4000","4001","4002"]'

  - name: SMPC__HAWK_SERVER_HEALTHCHECK_PORT
    value: '3000'

  - name: SMPC__NODE_HOSTNAMES
    value: '["0.0.0.0","node.1.stage.hnsw.worldcoin.dev","node.2.stage.hnsw.worldcoin.dev"]'

  - name: SMPC__SHARES_BUCKET_NAME
    value: "wf-smpcv2-stage-sns-requests"

  - name: SMPC__ENABLE_S3_IMPORTER
    value: "false"

  - name: SMPC__DB_CHUNKS_BUCKET_NAME
    value: "iris-mpc-db-exporter-store-node-0-stage--eun1-az3--x-s3"

  - name: SMPC__DB_CHUNKS_FOLDER_NAME
    value: "hnsw_even_odd_with_version_id_output_16k"

  - name: SMPC__LOAD_CHUNKS_PARALLELISM
    value: "64"

  - name: SMPC__LOAD_CHUNKS_BUFFER_SIZE
    value: "1024"

  - name: SMPC__REQUESTS_QUEUE_URL
    valueFrom:
      secretKeyRef:
        key: SQS_URL
        name: application

  - name: SMPC__RESULTS_TOPIC_ARN
    valueFrom:
      secretKeyRef:
        key: SNS_RESULTS_ARN
        name: application

  - name: SMPC__KMS_KEY_ARNS
    valueFrom:
      secretKeyRef:
        key: KMS_KEYS
        name: application

  - name: SMPC__PROCESSING_TIMEOUT_SECS
    value: "240"

  - name: SMPC__HEARTBEAT_INITIAL_RETRIES
    value: "65"

  - name: SMPC__SERVICE__METRICS__HOST
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP

  - name: SMPC__SERVICE__METRICS__PORT
    value: "8125"

  - name: SMPC__SERVICE__METRICS__QUEUE_SIZE
    value: "5000"

  - name: SMPC__SERVICE__METRICS__BUFFER_SIZE
    value: "256"

  - name: SMPC__SERVICE__METRICS__PREFIX
    value: "hnsw-0"

  - name: SMPC__IMAGE_NAME
    value: $(IMAGE_NAME)


initContainer:
  enabled: true
  image: "amazon/aws-cli:2.17.62"
  name: "hnsw-mpc-dns-records-updater"
  env:
    - name: PARTY_ID
      value: "0"
    - name: MY_NODE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
  configMap:
    init.sh: |
      #!/usr/bin/env bash

      # Set up environment variables
      HOSTED_ZONE_ID=$(aws route53 list-hosted-zones-by-name --dns-name "$PARTY_ID".stage.hnsw.worldcoin.dev --query "HostedZones[0].Id" --output text)

      # Generate the JSON content in memory
      BATCH_JSON=$(cat <<EOF
      {
        "Comment": "Upsert the A record for hnsw-mpc NCCL_COMM_ID",
        "Changes": [
          {
            "Action": "UPSERT",
            "ResourceRecordSet": {
              "Name": "node.$PARTY_ID.stage.hnsw.worldcoin.dev",
              "TTL": 5,
              "Type": "A",
              "ResourceRecords": [{
                "Value": "$MY_NODE_IP"
              }]
            }
          }
        ]
      }
      EOF
      )

      # Execute AWS CLI command with the generated JSON
      aws route53 change-resource-record-sets --hosted-zone-id "$HOSTED_ZONE_ID" --change-batch "$BATCH_JSON"
